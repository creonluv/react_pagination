{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onChangePage","pagesAmount","Math","ceil","pages","Array","fill","map","_","i","_jsxs","className","children","_jsx","concat","href","onClick","prevPage","page","nextPage","items","from","to","numbers","n","push","getNumbers","App","setCurrentPage","useState","setPerPage","totalAmount","length","firstIndex","lastIndex","min","currentItems","slice","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uKAOO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAQ,IAAIC,MAAcJ,GAAaK,KAAK,GAAGC,KAAI,CAACC,EAAGC,IAAMA,EAAI,IAcvE,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAS,aAAAG,OAA+B,IAAhBf,EAAoB,WAAa,IAAKa,SAChEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBhB,EACfiB,QApBSC,KACXlB,EAAc,GAChBC,EAAaD,EAAc,IAkBLa,SACnB,WAKFR,EAAMG,KAAIW,GACTL,cAAA,MACEF,UAAS,aAAAG,OAAef,IAAgBmB,EAAO,SAAW,IAAKN,SAG/DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAI,IAAAD,OAAMI,GACVF,QAASA,IAAMhB,EAAakB,GAAMN,SAEjCM,KAREA,KAaTL,cAAA,MACEF,UAAS,aAAAG,OAAef,IAAgBE,EAAc,WAAa,IAAKW,SAExEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAAehB,IAAgBE,EAC/Be,QA5CSG,KACXpB,EAAcE,GAChBD,EAAaD,EAAc,IA0CLa,SACnB,eC7DHQ,ECNC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAAInB,KAAIiB,GAAC,QAAAV,OAAYU,KAEpCG,EAAgBA,KAC3B,MAAO5B,EAAa6B,GAAkBC,mBAAS,IACxC/B,EAASgC,GAAcD,mBAAS,GAEjCE,EAAcX,EAAMY,OACpBC,GAAclC,EAAc,GAAKD,EACjCoC,EAAYhC,KAAKiC,IAAIpC,EAAcD,EAASiC,GAC5CK,EAAehB,EAAMiB,MAAMJ,EAAYC,GAE7C,OACExB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3Bb,EAAY,WAASkC,EAAa,EAAE,MAAIC,EAAU,MAAI,IAC3DH,EAAY,OAGfrB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRyB,GAAG,kBACH3B,UAAU,eACV4B,MAAOzC,EACP0C,SAAUC,IACRb,EAAe,GACfE,GAAYW,EAAMC,OAAOH,QACzB3B,SAED,CAAC,EAAG,EAAG,GAAI,IAAIL,KAAIoC,GAClB9B,cAAA,UAAqB0B,MAAOI,EAAO/B,SAChC+B,GADUA,SAOnB9B,cAAA,SAAO+B,QAAQ,kBAAkBjC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAAClB,EAAU,CACTE,MAAOkC,EACPjC,QAASA,EACTC,YAAaA,EACbC,aAAc4B,IAGhBf,cAAA,MAAAD,SACGwB,EAAa7B,KAAIsC,GAChBhC,cAAA,MAAe,UAAQ,OAAMD,SAC1BiC,GADMA,WEzDnBC,IAASC,OAAOlC,cAACc,EAAG,IAAKqB,SAASC,eAAe,U","file":"static/js/main.72c2f03f.chunk.js","sourcesContent":["interface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onChangePage: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onChangePage,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const pages = new Array<number>(pagesAmount).fill(0).map((_, i) => i + 1);\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      onChangePage(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage < pagesAmount) {\n      onChangePage(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={`page-item ${currentPage === page ? 'active' : ''}`}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onChangePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={`page-item ${currentPage === pagesAmount ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesAmount}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const totalAmount = items.length;\n  const firstIndex = (currentPage - 1) * perPage;\n  const lastIndex = Math.min(currentPage * perPage, totalAmount);\n  const currentItems = items.slice(firstIndex, lastIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {firstIndex + 1} - {lastIndex} of{' '}\n        {totalAmount})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n          >\n            {[3, 5, 10, 20].map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalAmount}\n        perPage={perPage}\n        currentPage={currentPage}\n        onChangePage={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}